from __future__ import annotations

from ...schemas.tooling import ToolSpec


class GoogleCodeExecution:
    """Factory for Google Gemini code execution tool.

    Produces a provider-native ToolSpec that instructs the Google adapter to
    include the `code_execution` tool in the request. The model will generate
    and run Python code server-side and return multiple content parts:

    - text: Inline text generated by the model
    - executable_code: Code generated by the model that is meant to be executed
    - code_execution_result: Result of the executable code

    Features:
    - Python code generation and execution
    - 30-second maximum runtime
    - Support for many libraries (numpy, pandas, matplotlib, etc.)
    - File I/O support (Gemini 2.0+)
    - Graph output via matplotlib/seaborn
    """

    def spec(self) -> ToolSpec:
        return ToolSpec(
            name="code_execution",
            description="Google Gemini built-in Python code execution tool with libraries",
            input_schema={},
            requires_network=False,  # Runs in sandboxed environment
            provider="google",
            provider_type="code_execution",
            provider_config=None,
        )
